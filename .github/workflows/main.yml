name: Build and deploy frontend and backend

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy-frontend:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    permissions: read-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Code Quality check
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '13.13.0'

      - name: Install frontend dependencies
        run: npm install
        working-directory: client

      - name: Build Next.js app
        run: npm run build
        working-directory: client
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./client   
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/flask-nextjs-user-management-example2.0:${{ github.run_id }}


  build-and-deploy-backend:
    name: Build and Deploy Backend
    runs-on: ubuntu-latest
    permissions: read-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Code Quality check
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.8'

      - name: Install backend requirements
        working-directory: api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests
        working-directory: api
        run: |
          python -m unittest project/tests/test*.py

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./api
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/flask-nextjs-user-management-example2.0:${{ github.run_id }}
