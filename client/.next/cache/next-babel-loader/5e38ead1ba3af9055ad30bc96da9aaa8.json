{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { UserApi } from \"services\";\nconst Index = () => {\n  return __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \"Home Page\"), __jsx(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Index;\nexport const Home = () => {\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n  useEffect(() => {\n    async function fetchUsers() {\n      try {\n        const api = new UserApi();\n        api.setup();\n        const response = await api.getUsers();\n        console.log(\"API Response:\", response); // Log API response\n        setUsers(response.users || []); // Update state with users data\n      } catch (err) {\n        console.error(\"Error fetching users:\", err);\n      }\n    }\n    fetchUsers();\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      maxWidth: \"800px\",\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      textAlign: \"center\",\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Users List\"), __jsx(\"table\", {\n    style: {\n      width: \"100%\",\n      borderCollapse: \"collapse\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, __jsx(\"th\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Name\"), __jsx(\"th\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Email\"), __jsx(\"th\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Status\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, users.map((user, index) => __jsx(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(\"td\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, user.firstName, \" \", user.lastName), __jsx(\"td\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, user.email), __jsx(\"td\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, user.admin ? \"Admin\" : \"No\"))))));\n};","map":{"version":3,"names":["React","useState","useEffect","UserApi","Index","__jsx","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Home","users","setUsers","fetchUsers","api","setup","response","getUsers","console","log","err","error","style","maxWidth","margin","textAlign","marginBottom","width","borderCollapse","border","padding","map","user","index","key","firstName","lastName","email","admin"],"sources":["/usr/src/app/pages/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { UserApi } from \"services\";\r\n\r\nconst Index = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12\">\r\n        <h1>Home Page</h1>\r\n        <Home />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n\r\nexport const Home = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchUsers() {\r\n      try {\r\n        const api = new UserApi();\r\n        api.setup();\r\n        const response = await api.getUsers();\r\n        console.log(\"API Response:\", response); // Log API response\r\n        setUsers(response.users || []); // Update state with users data\r\n      } catch (err) {\r\n        console.error(\"Error fetching users:\", err);\r\n      }\r\n    }\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"800px\", margin: \"auto\" }}>\r\n      <h1 style={{ textAlign: \"center\", marginBottom: \"20px\" }}>Users List</h1>\r\n      <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th style={{ border: \"1px solid #ccc\", padding: \"8px\" }}>Name</th>\r\n            <th style={{ border: \"1px solid #ccc\", padding: \"8px\" }}>Email</th>\r\n            <th style={{ border: \"1px solid #ccc\", padding: \"8px\" }}>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user, index) => (\r\n            <tr key={index}>\r\n              <td style={{ border: \"1px solid #ccc\", padding: \"8px\" }}>{user.firstName} {user.lastName}</td> \r\n              <td style={{ border: \"1px solid #ccc\", padding: \"8px\" }}>{user.email}</td>\r\n              <td style={{ border: \"1px solid #ccc\", padding: \"8px\" }}>{user.admin ? \"Admin\" : \"No\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}