{"ast":null,"code":"var _jsxFileName = \"/home/maram/Desktop/1testpfa11/flask-nextjs-user-management-example2.0/client/components/error-boundary.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nexport class ErrorBoundary extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      error: null,\n      eventId: null\n    });\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error\n    });\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.error) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      }, \"Error\");\n    } else {\n      return this.props.children;\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/maram/Desktop/1testpfa11/flask-nextjs-user-management-example2.0/client/components/error-boundary.tsx"],"names":["React","Component","ErrorBoundary","error","eventId","componentDidCatch","errorInfo","setState","console","log","render","state","props","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAAA;AAAA;;AAAA,mCACnC;AACNE,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,OAAO,EAAE;AAFH,KADmC;AAAA;;AAM3CC,EAAAA,iBAAiB,CAACF,KAAD,EAAeG,SAAf,EAA2C;AAC1D,SAAKC,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmBG,SAAnB;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWR,KAAf,EAAsB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAKS,KAAL,CAAWC,QAAlB;AACD;AACF;;AAjB0C","sourcesContent":["import React, { Component } from \"react\";\n\nexport class ErrorBoundary extends Component {\n  state = {\n    error: null,\n    eventId: null\n  };\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    this.setState({ error });\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error</div>;\n    } else {\n      return this.props.children;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}