{"ast":null,"code":"import { Api } from \"./api\";\nimport { getGeneralApiProblem } from \"./api/api-problem\";\nexport class UserApi extends Api {\n  convertUser(raw) {\n    return {\n      id: raw.id,\n      firstName: raw.firstName,\n      lastName: raw.lastName,\n      email: raw.email,\n      admin: raw.admin,\n      active: raw.active\n    };\n  }\n  async getUserById(token, id) {\n    this.apisauce.setHeader(\"Authorization\", `Bearer ${token}`);\n    const response = await this.apisauce.get(`/api/v1/users/${id}`);\n    if (!response.ok) {\n      const problem = getGeneralApiProblem(response);\n      if (problem) return problem;\n    }\n    try {\n      const user = response.data.data;\n      return {\n        kind: \"ok\",\n        user: user\n      };\n    } catch {\n      return {\n        kind: \"bad-data\"\n      };\n    }\n  }\n  async getUsers(token) {\n    this.apisauce.setHeader(\"Authorization\", `Bearer ${token}`);\n    const response = await this.apisauce.get(\"/api/v1/users\");\n    if (!response.ok) {\n      const problem = getGeneralApiProblem(response);\n      if (problem) return problem;\n    }\n    try {\n      const rawUsers = response.data;\n      const resultUsers = rawUsers.map(this.convertUser);\n      return {\n        kind: \"ok\",\n        users: resultUsers\n      };\n    } catch {\n      return {\n        kind: \"bad-data\"\n      };\n    }\n  }\n}","map":{"version":3,"names":["Api","getGeneralApiProblem","UserApi","convertUser","raw","id","firstName","lastName","email","admin","active","getUserById","token","apisauce","setHeader","response","get","ok","problem","user","data","kind","getUsers","rawUsers","resultUsers","map","users"],"sources":["/usr/src/app/services/users.ts"],"sourcesContent":["import { Api } from \"./api\";\r\nimport { ApiResponse } from \"apisauce\";\r\nimport { GeneralApiProblem, getGeneralApiProblem } from \"./api/api-problem\";\r\nimport { User } from \"./types\";\r\n\r\nexport type GetUsersResult = { kind: \"ok\"; users: User[] } | GeneralApiProblem;\r\nexport type GetUserResult = { kind: \"ok\"; user: User } | GeneralApiProblem;\r\n\r\nexport class UserApi extends Api {\r\n  convertUser(raw: any): User {\r\n    return {\r\n      id: raw.id,\r\n      firstName: raw.firstName,\r\n      lastName: raw.lastName,\r\n      email: raw.email,\r\n      admin: raw.admin,\r\n      active: raw.active,\r\n    };\r\n  }\r\n\r\n  async getUserById(token: string, id: number): Promise<GetUserResult> {\r\n    this.apisauce.setHeader(\"Authorization\", `Bearer ${token}`);\r\n    const response: ApiResponse<any> = await this.apisauce.get(\r\n      `/api/v1/users/${id}`\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const problem = getGeneralApiProblem(response);\r\n      if (problem) return problem;\r\n    }\r\n\r\n    try {\r\n      const user: User = response.data.data;\r\n      return { kind: \"ok\", user: user };\r\n    } catch {\r\n      return { kind: \"bad-data\" };\r\n    }\r\n  }\r\n\r\n  async getUsers(token: string): Promise<GetUsersResult> {\r\n    this.apisauce.setHeader(\"Authorization\", `Bearer ${token}`);\r\n    const response: ApiResponse<any> = await this.apisauce.get(\"/api/v1/users\");\r\n\r\n    if (!response.ok) {\r\n      const problem = getGeneralApiProblem(response);\r\n      if (problem) return problem;\r\n    }\r\n\r\n    try {\r\n      const rawUsers = response.data;\r\n      const resultUsers: User[] = rawUsers.map(this.convertUser);\r\n      return { kind: \"ok\", users: resultUsers };\r\n    } catch {\r\n      return { kind: \"bad-data\" };\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AAE3B,SAA4BC,oBAAoB,QAAQ,mBAAmB;AAM3E,OAAO,MAAMC,OAAO,SAASF,GAAG,CAAC;EAC/BG,WAAWA,CAACC,GAAQ,EAAQ;IAC1B,OAAO;MACLC,EAAE,EAAED,GAAG,CAACC,EAAE;MACVC,SAAS,EAAEF,GAAG,CAACE,SAAS;MACxBC,QAAQ,EAAEH,GAAG,CAACG,QAAQ;MACtBC,KAAK,EAAEJ,GAAG,CAACI,KAAK;MAChBC,KAAK,EAAEL,GAAG,CAACK,KAAK;MAChBC,MAAM,EAAEN,GAAG,CAACM;IACd,CAAC;EACH;EAEA,MAAMC,WAAWA,CAACC,KAAa,EAAEP,EAAU,EAA0B;IACnE,IAAI,CAACQ,QAAQ,CAACC,SAAS,CAAC,eAAe,EAAG,UAASF,KAAM,EAAC,CAAC;IAC3D,MAAMG,QAA0B,GAAG,MAAM,IAAI,CAACF,QAAQ,CAACG,GAAG,CACvD,iBAAgBX,EAAG,EACtB,CAAC;IAED,IAAI,CAACU,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAMC,OAAO,GAAGjB,oBAAoB,CAACc,QAAQ,CAAC;MAC9C,IAAIG,OAAO,EAAE,OAAOA,OAAO;IAC7B;IAEA,IAAI;MACF,MAAMC,IAAU,GAAGJ,QAAQ,CAACK,IAAI,CAACA,IAAI;MACrC,OAAO;QAAEC,IAAI,EAAE,IAAI;QAAEF,IAAI,EAAEA;MAAK,CAAC;IACnC,CAAC,CAAC,MAAM;MACN,OAAO;QAAEE,IAAI,EAAE;MAAW,CAAC;IAC7B;EACF;EAEA,MAAMC,QAAQA,CAACV,KAAa,EAA2B;IACrD,IAAI,CAACC,QAAQ,CAACC,SAAS,CAAC,eAAe,EAAG,UAASF,KAAM,EAAC,CAAC;IAC3D,MAAMG,QAA0B,GAAG,MAAM,IAAI,CAACF,QAAQ,CAACG,GAAG,CAAC,eAAe,CAAC;IAE3E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAMC,OAAO,GAAGjB,oBAAoB,CAACc,QAAQ,CAAC;MAC9C,IAAIG,OAAO,EAAE,OAAOA,OAAO;IAC7B;IAEA,IAAI;MACF,MAAMK,QAAQ,GAAGR,QAAQ,CAACK,IAAI;MAC9B,MAAMI,WAAmB,GAAGD,QAAQ,CAACE,GAAG,CAAC,IAAI,CAACtB,WAAW,CAAC;MAC1D,OAAO;QAAEkB,IAAI,EAAE,IAAI;QAAEK,KAAK,EAAEF;MAAY,CAAC;IAC3C,CAAC,CAAC,MAAM;MACN,OAAO;QAAEH,IAAI,EAAE;MAAW,CAAC;IAC7B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}