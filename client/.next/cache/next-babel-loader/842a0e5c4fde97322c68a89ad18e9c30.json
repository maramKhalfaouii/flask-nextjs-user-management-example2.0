{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport jwtDecode from \"jwt-decode\";\nexport var AuthToken = /*#__PURE__*/function () {\n  function AuthToken(token) {\n    _classCallCheck(this, AuthToken);\n    this.token = token;\n    _defineProperty(this, \"decodedToken\", void 0);\n    // we are going to default to an expired decodedToken\n    this.decodedToken = {\n      id: 0,\n      exp: 0,\n      iat: 0\n    };\n\n    // then try and decode the jwt using jwt-decode\n    try {\n      if (token) this.decodedToken = jwtDecode(token);\n    } catch (e) {}\n  }\n  return _createClass(AuthToken, [{\n    key: \"authorizationString\",\n    get: function get() {\n      return \"Bearer \".concat(this.token);\n    }\n  }, {\n    key: \"expiresAt\",\n    get: function get() {\n      return new Date(this.decodedToken.exp * 1000);\n    }\n  }, {\n    key: \"isExpired\",\n    get: function get() {\n      return new Date() > this.expiresAt;\n    }\n  }, {\n    key: \"isValid\",\n    get: function get() {\n      return !this.isExpired;\n    }\n  }]);\n}();","map":{"version":3,"names":["jwtDecode","AuthToken","token","_classCallCheck","_defineProperty","decodedToken","id","exp","iat","e","_createClass","key","get","concat","Date","expiresAt","isExpired"],"sources":["/usr/src/app/utils/auth/auth-token.ts"],"sourcesContent":["import jwtDecode from \"jwt-decode\";\r\n\r\nexport type DecodedToken = {\r\n  readonly exp: number;\r\n  readonly iat: number;\r\n  readonly id: number;\r\n};\r\n\r\nexport class AuthToken {\r\n  readonly decodedToken: DecodedToken;\r\n\r\n  constructor(readonly token?: string) {\r\n    // we are going to default to an expired decodedToken\r\n    this.decodedToken = { id: 0, exp: 0, iat: 0 };\r\n\r\n    // then try and decode the jwt using jwt-decode\r\n    try {\r\n      if (token) this.decodedToken = jwtDecode(token);\r\n    } catch (e) {}\r\n  }\r\n\r\n  get authorizationString() {\r\n    return `Bearer ${this.token}`;\r\n  }\r\n\r\n  get expiresAt(): Date {\r\n    return new Date(this.decodedToken.exp * 1000);\r\n  }\r\n\r\n  get isExpired(): boolean {\r\n    return new Date() > this.expiresAt;\r\n  }\r\n\r\n  get isValid(): boolean {\r\n    return !this.isExpired;\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,SAAS,MAAM,YAAY;AAQlC,WAAaC,SAAS;EAGpB,SAAAA,UAAqBC,KAAc,EAAE;IAAAC,eAAA,OAAAF,SAAA;IAAA,KAAhBC,KAAc,GAAdA,KAAc;IAAAE,eAAA;IACjC;IACA,IAAI,CAACC,YAAY,GAAG;MAAEC,EAAE,EAAE,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAC;;IAE7C;IACA,IAAI;MACF,IAAIN,KAAK,EAAE,IAAI,CAACG,YAAY,GAAGL,SAAS,CAACE,KAAK,CAAC;IACjD,CAAC,CAAC,OAAOO,CAAC,EAAE,CAAC;EACf;EAAC,OAAAC,YAAA,CAAAT,SAAA;IAAAU,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAA0B;MACxB,iBAAAC,MAAA,CAAiB,IAAI,CAACX,KAAK;IAC7B;EAAC;IAAAS,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAsB;MACpB,OAAO,IAAIE,IAAI,CAAC,IAAI,CAACT,YAAY,CAACE,GAAG,GAAG,IAAI,CAAC;IAC/C;EAAC;IAAAI,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAyB;MACvB,OAAO,IAAIE,IAAI,CAAC,CAAC,GAAG,IAAI,CAACC,SAAS;IACpC;EAAC;IAAAJ,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAuB;MACrB,OAAO,CAAC,IAAI,CAACI,SAAS;IACxB;EAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}