{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nfunction _callSuper(_this, derived, args) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      return !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (e) {\n      return false;\n    }\n  }\n\n  derived = _getPrototypeOf(derived);\n  return _possibleConstructorReturn(_this, isNativeReflectConstruct() ? Reflect.construct(derived, args || [], _getPrototypeOf(_this).constructor) : derived.apply(_this, args));\n}\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _react = require(\"react\");\n\nvar isServer = false;\n\nvar _default = /*#__PURE__*/function (_react$Component) {\n  function _default(props) {\n    var _this2;\n\n    _classCallCheck(this, _default);\n\n    _this2 = _callSuper(this, _default, [props]);\n    _this2._hasHeadManager = void 0;\n\n    _this2.emitChange = function () {\n      if (_this2._hasHeadManager) {\n        _this2.props.headManager.updateHead(_this2.props.reduceComponentsToState(_toConsumableArray(_this2.props.headManager.mountedInstances), _this2.props));\n      }\n    };\n\n    _this2._hasHeadManager = _this2.props.headManager && _this2.props.headManager.mountedInstances;\n\n    if (isServer && _this2._hasHeadManager) {\n      _this2.props.headManager.mountedInstances.add(_this2);\n\n      _this2.emitChange();\n    }\n\n    return _this2;\n  }\n\n  _inherits(_default, _react$Component);\n\n  return _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._hasHeadManager) {\n        this.props.headManager.mountedInstances.add(this);\n      }\n\n      this.emitChange();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.emitChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._hasHeadManager) {\n        this.props.headManager.mountedInstances[\"delete\"](this);\n      }\n\n      this.emitChange();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n}(_react.Component);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../next-server/lib/side-effect.tsx"],"names":["isServer","Component","_hasHeadManager","emitChange","constructor","componentDidMount","componentDidUpdate","componentWillUnmount","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAMA,QAAN,QAAA;;IAce,Q;AAcbI,oBAAW,KAAXA,EAAwB;AAAA;;AAAA;;AACtB,yCAAA,KAAA;AADsB,WAbhBF,eAagB,GAAA,KAAA,CAAA;;AAAA,WAXxBC,UAWwB,GAXX,YAAY;AACvB,UAAI,OAAJ,eAAA,EAA0B;AACxB,eAAA,KAAA,CAAA,WAAA,CAAA,UAAA,CACE,OAAA,KAAA,CAAA,uBAAA,oBACM,OAAA,KAAA,CAAA,WAAA,CADN,gBAAA,GAEE,OAHJ,KACE,CADF;AAOH;AAEuB,KAAA;;AAEtB,WAAA,eAAA,GACE,OAAA,KAAA,CAAA,WAAA,IAA0B,OAAA,KAAA,CAAA,WAAA,CAD5B,gBAAA;;AAGA,QAAIH,QAAQ,IAAI,OAAhB,eAAA,EAAsC;AACpC,aAAA,KAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,GAAA;;AACA,aAAA,UAAA;AAEH;;AATuB;AAUxBK;;;;;;WAAAA,6BAAoB;AAClB,UAAI,KAAJ,eAAA,EAA0B;AACxB,aAAA,KAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,IAAA;AAEF;;AAAA,WAAA,UAAA;AAEFC;;;WAAAA,8BAAqB;AACnB,WAAA,UAAA;AAEFC;;;WAAAA,gCAAuB;AACrB,UAAI,KAAJ,eAAA,EAA0B;AACxB,aAAA,KAAA,CAAA,WAAA,CAAA,gBAAA,WAAA,IAAA;AAEF;;AAAA,WAAA,UAAA;AAGFC;;;WAAAA,kBAAS;AACP,aAAA,IAAA;AAzCoD;;EAA3BP,MAAAA,CAAAA,S","sourcesContent":["import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n"]},"metadata":{},"sourceType":"script"}